buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'io.fabric'

ext {
    supportLibVersion = '27.0.2'
    fblibVersion = '4.29.0'
    firebaseVersion = '11.8.0'
}

android {
    signingConfigs {
        releaseconfig {
            keyAlias 'teazerkey'
            keyPassword 'Teazer@123'
            storeFile file('/Users/farazhabib/Documents/Android Keystores/Teazer.jks')
            storePassword 'Teazer@123'
        }
    }
    compileSdkVersion 27
    buildToolsVersion "27.0.2"
    defaultConfig {
        applicationId "com.cncoding.teazer"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 14
        versionName "1.0"
        dataBinding.enabled = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        renderscriptTargetApi 27
        renderscriptSupportModeEnabled true
        resValue "string", "app_name", "Teazer"
        manifestPlaceholders = [facebookId: "163105567761892"]
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.releaseconfig
            resValue "string", "app_name", "Teazer"
            manifestPlaceholders = [facebookId: "163105567761892"]
        }
        dev {
            applicationIdSuffix = ".debug"
            resValue "string", "app_name", "Teazer-Dev"
            debuggable true
            signingConfig signingConfigs.releaseconfig
            manifestPlaceholders = [facebookId: "1807707069304467"]
        }
    }
    packagingOptions {
        exclude 'builddef.lst'
        exclude 'version.txt'
        exclude 'isoparser-default.properties'
    }
//    splits {
//        abi {
//
//            // Enables building multiple APKs per ABI.
//            enable true
//
//            // By default all ABIs are included, so use reset() and include to specify that we only
//            // want APKs for x86, armeabi-v7a, and mips.
//
//            // Resets the list of ABIs that Gradle should create APKs for to none.
//            reset()
//
//            // Specifies a list of ABIs that Gradle should create APKs for.
//            include "armeabi-v7a", "x86", "arm64-v8a"
//
//            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
//            universalApk true
//        }
//    }

}

// Map for the version code that gives each ABI a value.
ext.abiCodes = [x86: 1, 'armeabi-v7a': 2, 'arm64-v8a': 3]

import com.android.build.OutputFile

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->

        def baseAbiVersionCode =
                project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))
        if (baseAbiVersionCode != null) {
            output.versionCodeOverride =
                    baseAbiVersionCode + variant.versionCode
        }
    }
}

dependencies {
    implementation "com.google.firebase:firebase-crash:$firebaseVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation files('libs/javax.mail-1.6.0.jar')
    implementation "com.facebook.android:facebook-login:$fblibVersion"
    implementation "com.facebook.android:facebook-share:$fblibVersion"
    implementation "com.facebook.android:facebook-applinks:$fblibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:support-v13:$supportLibVersion"
    implementation "com.android.support:support-v4:$supportLibVersion"
    implementation "com.android.support:palette-v7:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:support-vector-drawable:$supportLibVersion"
    implementation 'com.jakewharton:butterknife:8.5.1'
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okio:okio:1.13.0'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation "com.google.firebase:firebase-messaging:$firebaseVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseVersion"
    implementation "com.google.firebase:firebase-database:$firebaseVersion"
    implementation "com.google.android.gms:play-services-auth:$firebaseVersion"
    implementation "com.google.android.gms:play-services-places:$firebaseVersion"
    implementation "com.google.android.gms:play-services-location:$firebaseVersion"
    implementation 'com.google.android:flexbox:0.3.1'
    implementation 'com.hbb20:ccp:2.0.5'
    implementation 'com.sothree.slidinguppanel:library:3.4.0'
    implementation 'br.com.simplepass:loading-button-android:1.8.3'
    implementation 'jp.wasabeef:blurry:2.1.1'
    //noinspection GradleDependency
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    androidTestImplementation 'junit:junit:4.12'
    implementation 'com.github.jrvansuita:PickImage:2.1.5'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.6.0'
    implementation 'pub.devrel:easypermissions:0.3.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    implementation 'pub.devrel:easypermissions:0.3.1'
    implementation 'com.eightbitlab:blurview:1.3.3'
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    implementation 'com.github.iknow4:android-utils-sdk:1.1.1'
    implementation 'com.writingminds:FFmpegAndroid:0.3.2'
    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.google.android.exoplayer:exoplayer:r2.4.0'
    implementation 'com.github.yangjie10930:EpMedia:v0.9.1'
    implementation 'io.branch.sdk.android:library:2.14.2'
    implementation 'com.github.sharish:ShimmerRecyclerView:v1.1'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.9'
    implementation "com.android.support:support-emoji-appcompat:$supportLibVersion"
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'jp.wasabeef:glide-transformations:2.0.2'
    compile(group: 'com.expletus.mobiruck', name: 'mobiruck', version:'2.1.27', ext: 'aar', changing: true) {
        //exclude group: if needed
        exclude  group: 'com.android.support', module: 'appcompat-v7'
        transitive = true
    }
    implementation 'com.android.installreferrer:installreferrer:1.0'
    compile('com.crashlytics.sdk.android:answers:1.4.1@aar') {
        transitive = true;
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.0.2'
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'